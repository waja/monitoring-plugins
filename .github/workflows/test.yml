name: Test

on:
  push:
    branches:
      - $default-branch
      - development
      - master
  # Run tests for any PRs
  pull_request:
  workflow_dispatch:

jobs:
  linux:
    # The host should always be linux
    runs-on: ubuntu-latest
    name: Running tests on ${{ matrix.distro }}
    strategy:
      fail-fast: false
      matrix:
        distro:
          - 'debian:10'
          - 'debian:testing'
        include:
          - distro: 'debian:testing'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get install -qq --no-install-recommends clang
          - distro: 'debian:10'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get install -qq --no-install-recommends gcc
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Run the tests on ${{ matrix.distro }}
        env:
          PRE: ${{ matrix.pre }}
        run: |
          echo $PRE > ./prep-cmd.sh
          docker run --network host -w /monitoring-plugins -v ${PWD}:/monitoring-plugins ${{ matrix.distro }} \
              /bin/sh -c 'sh ./prep-cmd.sh && \
              sed -i "s/main$/main contrib non-free/" /etc/apt/sources.list && \
              apt-get update && \
              DEBIAN_FRONTEND=noninteractive apt-get install -qq --no-install-recommends \
              perl autotools-dev make libdbi-dev libldap2-dev libpq-dev default-libmysqlclient-dev libradcli-dev libkrb5-dev libnet-snmp-perl procps \
              libdbi0-dev libdbd-sqlite3 libssl-dev dnsutils snmp-mibs-downloader libsnmp-perl snmpd \
              fping snmp netcat smbclient fping pure-ftpd apache2 ssl-cert postfix libhttp-daemon-ssl-perl \
              libdbd-sybase-perl libnet-dns-perl \
              slapd ldap-utils \
              autoconf automake \
              faketime file sudo openssh-client gettext \
              libmonitoring-plugin-perl \
              libcurl4-openssl-dev \
              liburiparser-dev \
              squid \
              default-mysql-client default-mysql-server && \
              a2enmod ssl && \
              a2ensite default-ssl && \
              make-ssl-cert generate-default-snakeoil --force-overwrite && \
              service apache2 restart || cat /var/log/apache/error.log && \
              cp tools/squid.conf /etc/squid/squid.conf && \
              service squid restart && \
              service mysql restart || service mariadb restart && \
              mysql -e "create database IF NOT EXISTS test;" -uroot && \
              #sed -e "s/cn=admin,dc=nodomain/"$(/usr/sbin/slapcat|grep ^dn:|grep cn=|awk "{print $2}")"/" -i plugins/t/NPTest.cache.github && \
              tools/setup && \
              ./configure --enable-libtap && \
              make && \
              export NPTEST_ACCEPTDEFAULT=1 && \
              #export NPTEST_CACHE="$(pwd)/plugins/t/NPTest.cache.github" && \
              ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa && \
              cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \
              ssh-keyscan localhost >> ~/.ssh/known_hosts && \
              touch ~/.ssh/config && \
              rm -f /usr/share/mibs/ietf/SNMPv2-PDU /usr/share/mibs/ietf/IPSEC-SPD-MIB /usr/share/mibs/ietf/IPATM-IPMC-MIB /usr/share/mibs/iana/IANA-IPPM-METRICS-REGISTRY-MIB && \
              mkdir -p /var/lib/snmp/mib_indexes && \
              #mkdir /media/ramdisk && chmod 777 /media/ramdisk && mount -t tmpfs -o size=20% none /media/ramdisk && \
              sed "/NP_HOST_TLS_CERT/s/.*/'NP_HOST_TLS_CERT' => '$(hostname)',/" -i $NPTEST_CACHE && \
              make test'
